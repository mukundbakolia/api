<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Google Sheets JSON API — Demo</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <style>
    body { font-family: Arial, Helvetica, sans-serif; max-width: 760px; margin: 32px auto; padding: 0 16px; color:#222; }
    h1 { font-size: 20px; margin-bottom: 8px; }
    form { background:#f7f9fc; padding:16px; border-radius:8px; box-shadow:0 1px 4px rgba(20,20,20,0.06); }
    .row { display:flex; gap:12px; margin-bottom:10px; }
    .col { flex:1; min-width:120px; }
    label { display:block; font-size:13px; margin-bottom:4px; color:#333; }
    input[type="text"], select { width:100%; padding:8px 10px; border:1px solid #d0d7de; border-radius:6px; font-size:14px; }
    button { padding:10px 14px; border-radius:6px; border:0; background:#2b7cff; color:white; cursor:pointer; font-weight:600; }
    button.secondary { background:#6c757d; margin-left:8px; }
    pre { background:#111; color:#dff8c6; padding:12px; border-radius:8px; overflow:auto; white-space:pre-wrap; }
    .hint { font-size:12px; color:#666; margin-bottom:8px; }
  </style>
</head>
<body>
  <h1>Google Sheets JSON API — HTML Client</h1>
  <p class="hint">Fill the fields and click <strong>Submit (POST)</strong> to send a JSON body to your Apps Script web app. Use <strong>Fetch (GET)</strong> to read by <em>ref</em>.</p>

  <form id="apiForm">
    <div class="row">
      <div class="col">
        <label for="apiUrl">API URL</label>
        <input id="apiUrl" type="text" required
               value="https://script.google.com/macros/s/AKfycbwYOL9RZKlaOPgSZ_jSREHo6cgD7drM2tEtU2eO8eAz-5udTSrFn1E6f7S1cY9KdCZvww/exec" />
      </div>
      <div class="col">
        <label for="key">API Key</label>
        <input id="key" type="text" required value="Y123456" />
      </div>
    </div>

    <div class="row">
      <div class="col">
        <label for="action">Action</label>
        <select id="action">
          <option>ADD</option>
          <option>EDIT</option>
          <option>DELETE</option>
        </select>
      </div>
      <div class="col">
        <label for="ref">ref (Unique Identifier)</label>
        <input id="ref" type="text" placeholder="e.g. EMP004" />
      </div>
    </div>

    <div style="margin-bottom:10px; font-weight:600">Record fields</div>
    <div class="row">
      <div class="col"><label for="name">Name</label><input id="name" type="text" /></div>
      <div class="col"><label for="role">Role</label><input id="role" type="text" /></div>
      <div class="col"><label for="dept">Dept</label><input id="dept" type="text" /></div>
    </div>

    <div style="display:flex; align-items:center; margin-top:12px;">
      <button id="submitBtn" type="submit">Submit (POST JSON)</button>
      <button id="fetchBtn" type="button" class="secondary">Fetch (GET by ref)</button>
      <button id="clearBtn" type="button" class="secondary" style="background:#d9534f; margin-left:auto">Clear Output</button>
    </div>
  </form>

  <h3 style="margin-top:20px">Response</h3>
  <pre id="output">No requests yet.</pre>

  <script>
    const form = document.getElementById('apiForm');
    const output = document.getElementById('output');
    const submitBtn = document.getElementById('submitBtn');
    const fetchBtn = document.getElementById('fetchBtn');
    const clearBtn = document.getElementById('clearBtn');

    function show(obj){
      try { output.textContent = JSON.stringify(obj, null, 2); }
      catch(e){ output.textContent = String(obj); }
    }

    form.addEventListener('submit', async (ev) => {
      ev.preventDefault();
      submitBtn.disabled = true;
      const apiUrl = document.getElementById('apiUrl').value.trim();
      const key = document.getElementById('key').value.trim();
      const action = document.getElementById('action').value.trim().toUpperCase();
      const ref = document.getElementById('ref').value.trim();
      const body = {
        key,
        action
      };

      // include ref if present (for ADD you can send ref or modify script to auto-generate)
      if (ref) body.ref = ref;

      // include other fields only when they are non-empty
      const name = document.getElementById('name').value.trim();
      const role = document.getElementById('role').value.trim();
      const dept = document.getElementById('dept').value.trim();

      if (name) body.Name = name;
      if (role) body.Role = role;
      if (dept) body.Dept = dept;

      show({ status: "sending", requestBody: body });

      try {
        const res = await fetch(apiUrl, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(body)
        });

        // try to parse JSON
        const text = await res.text();
        try {
          const json = JSON.parse(text);
          show({ httpStatus: res.status, response: json });
        } catch (err) {
          show({ httpStatus: res.status, raw: text });
        }
      } catch (err) {
        show({ error: err.message || err });
      } finally {
        submitBtn.disabled = false;
      }
    });

    fetchBtn.addEventListener('click', async () => {
      const apiUrl = document.getElementById('apiUrl').value.trim();
      const key = encodeURIComponent(document.getElementById('key').value.trim());
      const ref = encodeURIComponent(document.getElementById('ref').value.trim());

      if (!ref) {
        alert('Enter the ref to fetch a single record via GET (or leave ref blank to fetch all).');
        return;
      }

      const url = apiUrl + '?key=' + key + '&ref=' + ref;
      show({ status: 'fetching', url });

      try {
        const res = await fetch(url, { method: 'GET' });
        const json = await res.json();
        show({ httpStatus: res.status, response: json });
      } catch (err) {
        show({ error: err.message || err });
      }
    });

    clearBtn.addEventListener('click', () => output.textContent = 'No requests yet.');

  </script>
</body>
</html>
